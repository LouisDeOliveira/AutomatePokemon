from enum import Enum, auto
import numpy as np


class PokemonType(Enum):
    normal = auto()
    fire = auto()
    water = auto()
    electric = auto()
    grass = auto()
    ice = auto()
    fighting = auto()
    poison = auto()
    ground = auto()
    flying = auto()
    psychic = auto()
    bug = auto()
    rock = auto()
    ghost = auto()
    dragon = auto()
    dark = auto()
    steel = auto()
    fairy = auto()


class TypeUtils:
    colours = {
        "normal": "#A8A77A",
        "fire": "#EE8130",
        "water": "#6390F0",
        "electric": "#F7D02C",
        "grass": "#7AC74C",
        "ice": "#96D9D6",
        "fighting": "#C22E28",
        "poison": "#A33EA1",
        "ground": "#E2BF65",
        "flying": "#A98FF3",
        "psychic": "#F95587",
        "bug": "#A6B91A",
        "rock": "#B6A136",
        "ghost": "#735797",
        "dragon": "#6F35FC",
        "dark": "#705746",
        "steel": "#B7B7CE",
        "fairy": "#D685AD",
    }

    strength_matrix = np.array(
        [
            [
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                0.5,
                0,
                1.0,
                1.0,
                0.5,
                1.0,
            ],
            [
                1.0,
                0.5,
                0.5,
                1.0,
                2.0,
                2.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                2.0,
                0.5,
                1.0,
                0.5,
                1.0,
                2.0,
                1.0,
            ],
            [
                1.0,
                2.0,
                0.5,
                1.0,
                0.5,
                1.0,
                1.0,
                1.0,
                2.0,
                1.0,
                1.0,
                1.0,
                2.0,
                1.0,
                0.5,
                1.0,
                1.0,
                1.0,
            ],
            [
                1.0,
                1.0,
                2.0,
                0.5,
                0.5,
                1.0,
                1.0,
                1.0,
                0,
                2.0,
                1.0,
                1.0,
                1.0,
                1.0,
                0.5,
                1.0,
                1.0,
                1.0,
            ],
            [
                1.0,
                0.5,
                2.0,
                1.0,
                0.5,
                1.0,
                1.0,
                0.5,
                2.0,
                0.5,
                1.0,
                0.5,
                2.0,
                1.0,
                0.5,
                1.0,
                0.5,
                1.0,
            ],
            [
                1.0,
                0.5,
                0.5,
                1.0,
                2.0,
                0.5,
                1.0,
                1.0,
                2.0,
                2.0,
                1.0,
                1.0,
                1.0,
                1.0,
                2.0,
                1.0,
                0.5,
                1.0,
            ],
            [
                2.0,
                1.0,
                1.0,
                1.0,
                1.0,
                2.0,
                1.0,
                0.5,
                1.0,
                0.5,
                0.5,
                0.5,
                2.0,
                0,
                1.0,
                2.0,
                2.0,
                0.5,
            ],
            [
                1.0,
                1.0,
                1.0,
                1.0,
                2.0,
                1.0,
                1.0,
                0.5,
                0.5,
                1.0,
                1.0,
                1.0,
                0.5,
                0.5,
                1.0,
                1.0,
                0,
                2.0,
            ],
            [
                1.0,
                2.0,
                1.0,
                2.0,
                0.5,
                1.0,
                1.0,
                2.0,
                1.0,
                0,
                1.0,
                0.5,
                2.0,
                1.0,
                1.0,
                1.0,
                2.0,
                1.0,
            ],
            [
                1.0,
                1.0,
                1.0,
                0.5,
                2.0,
                1.0,
                2.0,
                1.0,
                1.0,
                1.0,
                1.0,
                2.0,
                0.5,
                1.0,
                1.0,
                1.0,
                0.5,
                1.0,
            ],
            [
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                2.0,
                2.0,
                1.0,
                1.0,
                0.5,
                1.0,
                1.0,
                1.0,
                1.0,
                0,
                0.5,
                1.0,
            ],
            [
                1.0,
                0.5,
                1.0,
                1.0,
                2.0,
                1.0,
                0.5,
                0.5,
                1.0,
                0.5,
                2.0,
                1.0,
                1.0,
                0.5,
                1.0,
                2.0,
                0.5,
                0.5,
            ],
            [
                1.0,
                2.0,
                1.0,
                1.0,
                1.0,
                2.0,
                0.5,
                1.0,
                0.5,
                2.0,
                1.0,
                2.0,
                1.0,
                1.0,
                1.0,
                1.0,
                0.5,
                1.0,
            ],
            [
                0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                2.0,
                1.0,
                1.0,
                2.0,
                1.0,
                0.5,
                1.0,
                1.0,
            ],
            [
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                2.0,
                1.0,
                0.5,
                0,
            ],
            [
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                0.5,
                1.0,
                1.0,
                1.0,
                2.0,
                1.0,
                1.0,
                2.0,
                1.0,
                0.5,
                1.0,
                0.5,
            ],
            [
                1.0,
                0.5,
                0.5,
                0.5,
                1.0,
                2.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                2.0,
                1.0,
                1.0,
                1.0,
                0.5,
                2.0,
            ],
            [
                1.0,
                0.5,
                1.0,
                1.0,
                1.0,
                1.0,
                2.0,
                0.5,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                1.0,
                2.0,
                2.0,
                0.5,
                1.0,
            ],
        ]
    )

    @classmethod
    def get_score(cls, attacking: PokemonType, defending: PokemonType):
        return cls.strength_matrix[attacking.value - 1][defending.value - 1]

    @classmethod
    def get_color(cls, pokemon: PokemonType):
        return cls.hex_to_rgb(cls.colours[pokemon.name])

    @classmethod
    def hex_to_rgb(cls, hex_color):
        return tuple(int(hex_color[i : i + 2], 16) / 255 for i in (1, 3, 5))


if __name__ == "__main__":
    pokemon = PokemonType.bug
    print(TypeUtils.get_color(pokemon))
